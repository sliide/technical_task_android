[versions]
android-compileSdk = "32"
android-minSdk = "21"
android-tagetSdk = "32"

gradle = "7.1.2"
kotlin = "1.6.10"

androidx-core = "1.7.0"
androidx-activity = "1.4.0"
androidx-lifecycle = "2.4.0"
androidx-annotation = "1.3.0"

google-material = "1.4.0"
google-accompanist = "0.23.1"
compose = "1.1.1"

leak-canary = "2.8.1"

dagger = "2.41"
inject = "1"

retrofit2-runtime = "2.9.0"
retrofit2-koltinx-serialization = "0.8.0"
okhttp3 = "4.9.3"

kotlinx-serialization = "1.3.0"
kotlinx-coroutines = "1.5.1"


junit4 = "4.13.2"
mockito-kotlin = "4.0.0"

[libraries]
kotlin-gradle = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-tools = { group = "com.android.tools.build", name = "gradle", version.ref = "gradle" }

androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
google-material = { module = "com.google.android.material:material", version.ref = "google-material" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
androidx-compose-ui-toolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }

google-accompanist-insets = { module = "com.google.accompanist:accompanist-insets", version.ref = "google-accompanist" }

leak-canary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leak-canary" }

dagger-runtime = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
inject = { module = "javax.inject:javax.inject", version.ref = "inject" }

retrofit2-runtime = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2-runtime" }
retrofit2-koltinx-serialization = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit2-koltinx-serialization" }
okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
okhttp3-loggin-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3" }

kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }

junit4 = { module = "junit:junit", version.ref = "junit4" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }

[bundles]
androidx-compose = [
    "androidx-compose-ui",
    "androidx-compose-material"
]

androidx-compose-tooling = [
    "androidx-compose-ui-toolingPreview",
    "androidx-compose-ui-tooling"
]

retrofit2 = [
    "retrofit2-runtime",
    "okhttp3",
    "okhttp3-loggin-interceptor",
    "retrofit2-koltinx-serialization",
    "kotlinx-serialization"
]

tests-unit = [
    "junit4",
    "mockito-kotlin"
]